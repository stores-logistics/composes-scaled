version: '2'
services:
    tradings-ms:
        image: caenietoba/trading-manager:1.0
        links:
            - db
        ports:
            - 4005:4005
        depends_on:
            - tradings-db
    tradings-db:
        image: mongo
        expose:
            - "27017"
        volumes:
            - mongodata:/data/trading_db

    users-ms:
        image: caenietoba/users-manager:1.0
        ports:
            - "3000:3000"
        environment: 
            LDAP_URL: '104.154.39.113'
        depends_on:
            users-db:
                condition: service_healthy
        healthcheck:
            test: "curl -I users-ms:3000/users-ms/resources/users/ --fail"
            interval: 20s
            retries: 10
    users-db:
        image: mysql:5.7
        healthcheck:
            test: "mysqlcheck -u$$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE"
            interval: 20s
            timeout: 5s
            retries: 15
        environment:
            MYSQL_ROOT_PASSWORD: 123
            MYSQL_DATABASE: users-db
            MYSQL_USER: sa
            MYSQL_PASSWORD: 123
        ports:
            - "3306:3306"

    stores-ms:
        image: caenietoba/stores-manager:1.0
        ports:
            - "3001:3001"
        depends_on:
            stores-db:
                condition: service_healthy
        healthcheck:
            test: "curl -I stores-ms:3001/stores-ms/resources/stores/ --fail"
            interval: 20s
            retries: 10
    stores-db:
        image: mysql:5.7
        healthcheck:
            test: "mysqlcheck -u$$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE"
            interval: 20s
            timeout: 5s
            retries: 15
        environment:
            MYSQL_ROOT_PASSWORD: 123
            MYSQL_DATABASE: stores-db
            MYSQL_USER: sa
            MYSQL_PASSWORD: 123
        ports:
            - "3336:3306"

    products-db:
        image: mongo
        ports: ['27000:27017']
        restart: always
        healthcheck:
            test: "exit 0"
        networks:
            - my-network
        volumes:
            - mongodata2:/data/db
    products-ms:
        image: caenietoba/products-manager:1.0
        links:
            - 'products-db'
        depends_on: 
            products-db:
                condition: service_healthy
        environment:
            - WAIT_HOSTS=mongodb:27000
        entrypoint:
            - /usr/local/bin/docker-entrypoint.sh
        ports:
            - "4006:4006"
        networks:
            - my-network
    
networks:
    my-network:
        name: net

volumes:
    mongodata:
    mongodata2:

tradings-ms:
    scale: 4
tradings-db:
    scale: 4
products-ms:
    scale: 2
products-db:
    scale: 2
stores-ms:
    scale: 2
stores-db:
    scale: 2
users-ms:
    scale: 2
users-db:
    scale: 2

ms-store-app